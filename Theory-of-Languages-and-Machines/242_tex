\documentclass[10pt,a4paper]{book}

\usepackage{graphicx}
% Requires \usepackage{graphicx}

\begin{document}
\small

\begin{flushleft}
 \textbf{ 242\; $|$ \;\scriptsize \textsf{Introduction to Automata Theory, Formal Languages and Computation}}
\end{flushleft}

\emph{\textbf{\!\!\!\!\!\!\!\!\!Nullable:}} It gives two results ‘true’ or ‘false’. It is true if the empty string is a member of strings generated by the sub-expression rooted by n and false otherwise.

The construction of firstpos is made according to the following table.

\begin{table}[h]
  \centering
\end{table}
\begin{figure}[h]
  \centering
  % Requires \usepackage{graphicx}
  \includegraphics[width=13cm]{1.1}\\
\end{figure}


\!\!\!\!\!\!\!\!\!\!\!\!\! followpos is constructed only for the leaf nodes. It is constructed in the following way.


\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\! $\bullet$ If n is a dot (.) node containing the left child $c_{1}$ and the right child $c_{2}$, and i is a position in lastpos$(c_{1})$,then all positions in firstpos$(c_{2})$ belong to followpos(i).


\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\! $\bullet$ If n is a star node, and i is a position in lastpos(n), then all positions in firstpos(n) belong to followpos(i).

\quad

\!\!\!\!\!\!\!\!\!\!\!\!The DFA is constructed by the following steps:

\begin{flushleft}
  \textsf{\!\!\!\!\!\!\!\!\!\!\!\!\! \emph{\textbf{Step I}}:} Make the RE R as augmented by placing an end marker $\#$, and making it $M\#$.
  
  \!\!\!\!\!\!\!\!\!\!\!Generate a parse tree from $M\#$.
  
  \textsf{\textbf{\!\!\!\!\!\!\!\!\!\!\!\!\! \emph{Step II}}}: Calculate the fi rstpos and lastpos for all the internal and leaf nodes Calculate
  
   \!\!\!\!\!\!\!\!\!\!\!the followpos for the leaf nodes.
   
   \emph{\textbf{\!\!\!\!\!\!\!\!\!\!\!\!\! Step III:}} Take the fi rstpos(root) as an unmarked state S of the constructing DFA.
   
   \textbf{\emph{\!\!\!\!\!\!\!\!\!\!\!\!\! Step IV}:} while (there exists an unmarked state S in the states of DFA)
   
   do
   
   Mark S and construct a transition from S using the following process for each input 
   
   symbol ‘a’ as an alphabet of R
   
   do
   
   let S contain ‘a’ in position $i_{1},i_{2} ...,i_{n}$, then
\end{flushleft}

$$ S^{'} = followpos(i_{1}) \cup ... \cup followpos(in) $$
$$ \delta (S,a) = S^{/} $$

\begin{flushleft}
if ($S'$ is not empty and have not appeared in the states of the DFA)

put $S'$ as an unmarked state into the states of the DFA.
\end{flushleft}



\end{document}
